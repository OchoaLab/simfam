% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bim_add_posg.R
\name{bim_add_posg}
\alias{bim_add_posg}
\title{Calculate genetic positions from base pair positions and a genetic map}
\usage{
bim_add_posg(bim, map)
}
\arguments{
\item{bim}{The table of variants, which is a data.frame/tibble with at least two columns: \code{chr} (must be numeric between 1 and the maximum chromosome in \code{map} below for map to work, otherwise ignored with a warning) and \code{pos} (base pair position, usually an integer).
If column \code{posg} is present, it will be overwritten in the output, otherwise it is created.
Additional columns may be present and will be unedited.}

\item{map}{The genetic map, a list of chromosomes each of which is a data.frame/tibble with columns \code{pos} for base pair position and \code{posg} for genetic position.}
}
\value{
The \code{bim} input with new or overwritten column \code{posg} of genetic positions in cM.
Rows with values of \code{chr} that are not numeric or are out of range (for given \code{map}) are unedited if the \code{posg} column was present, or assigned \code{NA} otherwise.
}
\description{
Given a table of base pair positions (a data frame with chromosome and position values), and a genetic map (see \code{\link{recomb_map_hg}}), this function calculates genetic positions.
If genetic positions existed in input, they are overwritten.
}
\details{
Base pair positions are converted to genetic positions from the provided map using linear interpolation, using \code{\link[stats:approxfun]{stats::approx()}} with options \code{rule = 2} (out of range cases are set to nearest end's value) and \code{ties = list( 'ordered', mean )} (assume data is ordered, interpolate ties in base pair positions in map using mean of genetic positions).
Output will be incorrect, without throwing errors, if genetic map is not ordered.
}
\examples{
# let's define a very simple table of base pair positions, with minimal information
library(tibble)
bim <- tibble(
  chr = c(1, 1, 2, 2),
  pos = c(50, 200, 30, 123) * 1000000
)
# use latest human recombination map
map <- recomb_map_hg38

# now use this function to add genetic positions column to `bim`!
bim <- bim_add_posg( bim, map )

}
\seealso{
\code{\link{recomb_map_hg}} for simplified human recombination maps included in this package.
}
